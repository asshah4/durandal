% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/terms.R
\name{terms}
\alias{terms}
\alias{tm}
\alias{tm.character}
\alias{tm.formula}
\alias{tm.default}
\alias{is_tm}
\title{Create vectorized terms}
\usage{
tm(x = unspecified(), ...)

\method{tm}{character}(
  x,
  role = character(),
  label = character(),
  level = character(),
  group = character(),
  type = character(),
  distribution = character(),
  description = character(),
  transformation = character(),
  ...
)

\method{tm}{formula}(
  x,
  role = formula(),
  label = formula(),
  level = formula(),
  group = formula(),
  type = formula(),
  distribution = formula(),
  description = formula(),
  transformation = formula(),
  ...
)

\method{tm}{default}(x = unspecified(), ...)

is_tm(x)
}
\arguments{
\item{x}{An object that can be coerced to a \code{tm} object.}

\item{role}{Specific roles the variable plays within the formula. These are
of particular importance, as they serve as special terms that can effect
how a formula is interpreted. Please see the \emph{Roles} section below for
further details. The options for roles are as below:
\itemize{
\item outcome
\item exposure
\item predictor
\item confounder
\item mediator
\item interaction
\item strata
\item unknown
}}

\item{label}{Display-quality label describing the variable}

\item{level}{Display-quality levels of categorical variables, defined in a
\code{list_of_formula} object}

\item{group}{Grouping variable name for modeling or placing terms together}

\item{type}{Type of variable, either categorical (qualitative) or
continuous (quantitative)}

\item{distribution}{How the variable itself is more specifically
subcategorized, e.g. ordinal, continuous, dichotomous, etc}

\item{description}{Option for further descriptions or definitions needed for
the tm, potentially part of a data dictionary}

\item{transformation}{Modification of the term to be applied when
combining with data}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
}
\details{
A vectorized term object that allows for additional information to be carried
with the variable name.

This is not meant to replace traditional \code{\link[stats:terms]{stats::terms()}}, but to supplement
it using additional information that is more informative for causal modeling.
}
\section{Roles}{
Specific roles the variable plays within the formula. These are of particular
importance, as they serve as special terms that can effect how a formula is
interpreted.\tabular{lll}{
   Role \tab Shortcut \tab Description \cr
   outcome \tab \code{.o(...)} \tab exposure → \strong{outcome} \cr
   exposure \tab \code{.x(...)} \tab \strong{exposure} → outcome \cr
   predictor \tab \code{.p(...)} \tab exposure + \strong{predictor} → outcome \cr
   confounder \tab \code{.c(...)} \tab exposure ← \strong{confounder} → outcome \cr
   mediator \tab \code{.m(...)} \tab exposure → \strong{mediator} → outcome \cr
   interaction \tab \code{.i(...)} \tab exposure × \strong{interaction} → outcome \cr
   strata \tab \code{.s(...)} \tab exposure ÷ \strong{strata} → outcome \cr
   \emph{unknown} \tab  \tab not yet assigned \cr
}


Formulas can be condensed by applying their specific role to individual runes
as a function/wrapper. For example, \code{y ~ .x(x1) + x2 + x3}. This would
signify that \code{x1} has the specific role of an exposure.
}

\section{Pluralized Arguments}{
For the arguments that would be dispatched for objects that are plural,
e.g. containing multiple terms such as a \code{formula} object, the input should
be wrapped within a \code{list()}.

For example, for the \strong{role} argument, it would be written:

\code{role = list(X ~ "exposure", M ~ "mediator", C ~ "confounder")}

This applies for all others plural objects and arguments.
}

